barbot.db = {
  connectionPool = disabled
  url = "jdbc:postgresql://localhost/pgdb"
  driver = org.postgresql.Driver
  keepAliveConnection = true
  user = pguser
  password = pguser
}
barbot.server {
  host = 0.0.0.0
  port = 8080
}

barbot.cache {
  # interval in seconds of target cache refresh
  cache-timeout = 60

  # interval in seconds during which for targets providing explicit non-200 response
  # there will be no attempt to refresh data in cache
  # also while being in limb targets will not be included during decision calculations
  limb-resurrection-timeout = 180

  # directive alowwing to abandon targets which do not response during
  #
  # host-connection-pool.max-retries * client.connecting-timeout
  #
  # if set to "true" after trigger from above launched taget in question will be:
  # - removed from cache
  # - marked as inactive in databse (isActive = true)
  # after this the only way for target to get back - update itself via public API
  #
  # but if set to "true" this feature will be disable
  # and endless actors will continue to be spanwned
  # just in order to sacrifice their miserable lifes
  # in pursue of getting info from this heartless target
  banish-to-valhalla = true
}

akka {
  # event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
}

akka.http {
  host-connection-pool {
    # should be set to 1 in prod
    # but for dev env ideally should be equal to number of dummy resources
    max-connections = 1
    # should be grater than barbot.cache.cache-timeout
    idle-timeout = 70 s
    # works in combination with
    # - client.connecting-timeout
    # impacts effect of
    # - barbot.cache.banish-to-valhalla
    max-retries = 6
  }

  client {
    idle-timeout = 30 s
    # works in combination with
    # - host-connection-pool.max-retries
    # impacts effect of
    # - barbot.cache.banish-to-valhalla
    connecting-timeout = 5 s
  }
}